version: "3.8"

services:
  nginx:
    image: ghcr.io/cssnr/docker-nginx-proxy:latest
    environment:
      - SERVICE_NAME=app
      - SERVICE_PORT=3000
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "1.0"
          memory: 64M
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-public"
        - "traefik.constraint-label=traefik-public"
        - "traefik.http.routers.${STACK_NAME?err}-http.rule=Host(`${TRAEFIK_HOST?err}`)"
        - "traefik.http.routers.${STACK_NAME}-http.entrypoints=http"
        - "traefik.http.routers.${STACK_NAME}-http.middlewares=https-redirect"
        - "traefik.http.routers.${STACK_NAME}-https.rule=Host(`${TRAEFIK_HOST}`)"
        - "traefik.http.routers.${STACK_NAME}-https.entrypoints=https"
        - "traefik.http.routers.${STACK_NAME}-https.tls=true"
        - "traefik.http.services.${STACK_NAME}.loadbalancer.server.port=80"
        - "traefik.http.services.${STACK_NAME}.loadbalancer.server.scheme=http"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf localhost:80/health-check || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      - app
    networks:
      - internal
      - traefik-public

  app:
    image: ghcr.io/smashedr/node-redirect:${VERSION:-latest}
    command: "npm start"
    environment:
      REDIRECTS: ${REDIRECTS}
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: "2.0"
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "curl -sf localhost:3000/app-health-check || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - internal

networks:
  internal:
    driver: overlay
  traefik-public:
    external: true
