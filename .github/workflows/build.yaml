name: "Build"

on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Extra Tags: comma,separated"
        required: false
  release:
    types: [published]

jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest
    timeout-minutes: 15

    permissions:
      contents: write
      packages: write

    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: "Docker Login"
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.GHCR_USER }}
          password: ${{ secrets.GHCR_PASS }}

      - name: "Setup Buildx"
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      #- name: "Generate Version Tags"
      #  id: version
      #  uses: cssnr/update-version-tags-action@v1
      #  with:
      #    tags: ${{ inputs.tags }}
      #    prefix: ""
      #
      #- name: "Debug Version Tags"
      #  continue-on-error: true
      #  run: |
      #    echo "github.ref_name: ${{ github.ref_name }}"
      #    echo "steps.version.outputs.tags: ${{ steps.version.outputs.tags }}"

      - name: "Generate Docker Tags"
        id: tags
        uses: cssnr/docker-tags-action@v1
        with:
          images: "ghcr.io/${{ github.repository }}"
          tags: ${{ inputs.tags }}

      - name: "Debug Docker Tags"
        continue-on-error: true
        run: |
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "tags: ${{ steps.tags.outputs.tags }}"
          echo "labels: ${{ steps.tags.outputs.labels }}"
          echo "annotations: ${{ steps.tags.outputs.annotations }}"

      - name: "Build and Push"
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.tags.outputs.tags }}
          labels: ${{ steps.tags.outputs.labels }}
          annotations: ${{ steps.tags.outputs.annotations }}
          build-args: |
            VERSION=${{ github.ref_name }}

      - name: "Send Failure Notification"
        if: ${{ failure() }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
